<ModalScreen>
    <Header>
        <h3>Sign In</h3>
    </Header>
    <Body>
        <MatTextField Style="width:100%"
                      OnInput="@(ui => {OnValueChange(ui.Value?.ToString() ?? string.Empty);})"
                      OnKeyPress="OnNameChange" class="FullWidthInput" 
                      @bind-Value="@PlayerName" Label="Name"></MatTextField>
        @if (Disabled && PlayerName != "")
        {
            <p style="color:red">*This name is already in use!</p>
        }
    </Body>
    <Footer>
        <MatButton class=" GlassButton" Type="submit" Disabled="@Disabled" OnClick="@CreatePlayer" Label="Sign In">
        </MatButton>
    </Footer>
</ModalScreen>
@inject BearsDenGameServer BearsDenGameServer

@code {

    [Parameter]
    public EventCallback<IPlayer> PlayerCreated { get; set; }

    private string _playerName = "";

    private string PlayerName
    {
        get => _playerName;
        set
        {
            _playerName = value;
            Console.WriteLine(value);
            Validate();
        }
    }

    private bool Disabled { get; set; } = true;


    private void OnValueChange(string e)
    {
        PlayerName = e;

        Console.WriteLine(Disabled);
    }

    private void OnNameChange(KeyboardEventArgs e)
    {
        if (e.Code != "Enter" && e.Code != "NumpadEnter") return;
        if (!Disabled) CreatePlayer();
    }
    private void Validate()
    {
        Disabled = IsValid();

    }

    private bool IsValid()
    {
        if (PlayerName == "") return true;
        return BearsDenGameServer.PlayerServer.GetPlayer(PlayerName) != null;
    }


    private void CreatePlayer()
    {
        BdgPlayer player = new(_playerName);
        BearsDenGameServer.PlayerServer.AddPlayer(player);
        PlayerCreated.InvokeAsync(player);
    }

}