@using BearsDenGames.Models.Battleship
<h3>Game List</h3>
<hr/> 
  <MatSelectItem @bind-Value="@GameTypes" Items="@GameList"></MatSelectItem>
@foreach (var game in BearsDenGameServer.AvailableGames(GameTypes))
{
    <div class="MainGameList-Grid">
        <div class="MainGameList-GameType">
            @game.GameTypes
        </div>
        <div class="MainGameList-GameName">
            @game.GameName
        </div>
        <div class="MainGameList-Button">
            <MatButton class="GlassButton" OnClick="@(() => Join(game))" Label="Join"></MatButton>
        </div>
    </div>
    <hr/> 
}

@inject BearsDenGameServer BearsDenGameServer
@inject NavigationManager NavManager

@code {

    [Parameter]
    public IPlayer? Player { get; set; }

    private GameTypes GameTypes { get; set; }
    private List<string> GmList { get; } = Enum.GetValues(typeof(GameTypes)).Cast<string>().ToList();

    protected override void OnInitialized()
    {
        BearsDenGameServer.BattleshipServer.BsGameListUpdated += Refresh;
    }

    private async void Refresh()
    {
        await InvokeAsync(StateHasChanged);
    }

    private void Join(CurrentGame selectedGame)
    {
        var game = BearsDenGameServer.BattleshipServer.GetGame(selectedGame.GameName);

        if (game == null)
        {
            StateHasChanged();
            return;
        }
        if (Player == null) return;
        BattleshipPlayer bsPlayer = new(Player);
        Player.CurrentGame = new(game.GameName, GameTypes.Battleship);
        game.AddPlayer(bsPlayer);
        NavManager.NavigateTo("Battleship");
    }

}