<ModalScreen>
    <Header>
        <h3>Sign In</h3>
    </Header>
    <Body>
        <MatTextField Style="width:100%"
                      OnInput="@(ui => {onValueChange(ui.Value.ToString());})"
                      OnKeyPress="onNameChange" class="FullWidthInput" 
                      @bind-Value="@PlayerName" Label="Name"></MatTextField>
        @if (Disabled && PlayerName != "")
        {
            <p style="color:red">*This name is already in use!</p>
        }
    </Body>
    <Footer>
        <MatButton class=" GlassButton" Type="submit" Disabled="@Disabled" OnClick="@CreatePlayer" Label="Sign In">
        </MatButton>
    </Footer>
</ModalScreen>
@inject BearsDenGameServer BearsDenGameServer

@code {

    [Parameter]
    public EventCallback<Player> PlayerCreated { get; set; }

    private string _playerName = "";

    private string PlayerName
    {
        get => _playerName;
        set
        {
            _playerName = value;
            Console.WriteLine(value);
            Validate();
        }
    }

    private bool Disabled { get; set; } = true;


    private void onValueChange(string e)
    {
        PlayerName = e;

        Console.WriteLine(Disabled);
    }

    private void onNameChange(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (!Disabled) CreatePlayer();
        }

    }
    private void Validate()
    {
        Disabled = IsValid();

    }

    private bool IsValid()
    {
        if (PlayerName == "") return true;
        if (BearsDenGameServer.PlayerServer.GetPlayer(PlayerName) != null) return true;
        return false;
    }


    private void CreatePlayer()
    {
        Player player = new(PlayerName);
        BearsDenGameServer.PlayerServer.AddPlayer(player);
        PlayerCreated.InvokeAsync(player);
    }

}